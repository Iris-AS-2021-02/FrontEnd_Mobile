{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { forwardRef, useState, useImperativeHandle, useRef, useEffect } from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Label from \"../Label\";\nimport { colors } from \"../../colors\";\nvar FormItem = forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _useState = useState({\n    status: false,\n    message: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasError = _useState2[0],\n      setHasError = _useState2[1];\n\n  var _useState3 = useState(new Animated.Value(0)),\n      _useState4 = _slicedToArray(_useState3, 1),\n      animatedBottom = _useState4[0];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      shouldAnimate = _useState6[0],\n      setShouldAnimate = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      wrapperHeight = _useState8[0],\n      setWrapperHeight = _useState8[1];\n\n  var isRequired = props.isRequired,\n      value = props.value,\n      keyboardType = props.keyboardType;\n  var inputRef = useRef();\n  useImperativeHandle(ref, function () {\n    return {\n      setState: function setState() {\n        var validation;\n        if (props.customValidation) validation = props.customValidation();\n        setHasError(containsError(keyboardType, isRequired, value, validation));\n      },\n      focus: function focus() {\n        return inputRef.current.focus();\n      },\n      blur: function blur() {\n        return inputRef.current.blur();\n      },\n      clear: function clear() {\n        return inputRef.current.clear();\n      },\n      isFocused: function isFocused() {\n        return inputRef.current.isFocused();\n      },\n      getComponent: function getComponent() {\n        return 'FormItem';\n      }\n    };\n  });\n\n  var handleBlur = function handleBlur(e) {\n    var validation;\n    if (props.customValidation) validation = props.customValidation();\n    setHasError(containsError(keyboardType, isRequired, value, validation));\n    if (props.onBlur) props.onBlur(e);\n  };\n\n  var handleFocus = function handleFocus(e) {\n    setHasError({\n      status: false,\n      message: ''\n    });\n    if (props.floatingLabel && shouldAnimate) Animated.timing(animatedBottom, {\n      toValue: props.textArea ? 24 : wrapperHeight / 2,\n      useNativeDriver: false,\n      duration: 300\n    }).start(function () {\n      return setShouldAnimate(false);\n    });\n    if (props.onFocus) props.onFocus(e);\n  };\n\n  useEffect(function () {\n    if (props.floatingLabel && props.value) Animated.timing(animatedBottom, {\n      toValue: props.textArea ? 24 : wrapperHeight / 2,\n      useNativeDriver: false,\n      duration: 300\n    }).start(function () {\n      return setShouldAnimate(false);\n    });\n  }, [shouldAnimate]);\n\n  if (props.floatingLabel) {\n    return React.createElement(React.Fragment, null, React.createElement(View, {\n      style: [styles.wrapper, props.textArea ? {\n        height: 120,\n        alignItems: 'flex-start'\n      } : undefined, props.style, hasError.status ? {\n        borderColor: colors.red,\n        borderWidth: 1\n      } : undefined],\n      onLayout: function onLayout(_ref2) {\n        var nativeEvent = _ref2.nativeEvent;\n        return setWrapperHeight(nativeEvent.layout.height);\n      }\n    }, props.label && React.createElement(Label, {\n      text: props.label,\n      textStyle: [!props.asterik ? {\n        marginLeft: 4\n      } : undefined, props.labelStyle],\n      asterik: props.asterik,\n      style: [props.floatingLabel ? {\n        bottom: animatedBottom\n      } : undefined, {\n        paddingHorizontal: 2,\n        backgroundColor: animatedBottom.interpolate({\n          inputRange: [0, props.textArea ? 24 : wrapperHeight / 2],\n          outputRange: ['transparent', colors.white]\n        }),\n        marginTop: props.textArea ? 16 : 0\n      }]\n    }), React.createElement(View, {\n      style: [styles.wrapper, {\n        marginBottom: 0,\n        flex: 1,\n        paddingHorizontal: 0,\n        height: '100%',\n        position: 'absolute',\n        right: 8,\n        left: 8,\n        backgroundColor: 'transparent'\n      }]\n    }, children, React.createElement(TextInput, _extends({}, props, {\n      style: [styles.inputText, props.textInputStyle],\n      ref: inputRef,\n      onBlur: handleBlur,\n      onFocus: handleFocus,\n      value: props.value,\n      autoCapitalize: props.autoCapitalize || (props.keyboardType == 'email-address' ? 'none' : undefined),\n      maxLength: props.maxLength || 150,\n      placeholder: \"\",\n      multiline: props.textArea || props.multiline,\n      textAlignVertical: props.textArea ? 'top' : 'center',\n      testID: \"input\"\n    })), hasError.status && React.createElement(View, {\n      style: styles.errorWrapper\n    }, React.createElement(Text, {\n      style: styles.exclamation\n    }, \"!\")))), hasError.status && React.createElement(Text, {\n      style: [styles.underneathText, props.underneathTextStyle]\n    }, props.underneathText || hasError.message));\n  }\n\n  return React.createElement(React.Fragment, null, props.label && React.createElement(Label, {\n    text: props.label,\n    textStyle: [styles.label, !props.asterik ? {\n      marginLeft: 4\n    } : undefined, props.labelStyle],\n    asterik: props.asterik\n  }), React.createElement(View, {\n    style: [styles.wrapper, props.textArea ? {\n      height: 120\n    } : undefined, props.style, hasError.status ? {\n      borderColor: colors.red,\n      borderWidth: 1\n    } : undefined]\n  }, children, React.createElement(TextInput, _extends({}, props, {\n    style: [styles.inputText, props.textInputStyle],\n    ref: inputRef,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    value: props.value,\n    autoCapitalize: props.autoCapitalize || (props.keyboardType == 'email-address' ? 'none' : undefined),\n    maxLength: props.maxLength || 150,\n    multiline: props.textArea || props.multiline,\n    textAlignVertical: props.textArea ? 'top' : 'center',\n    testID: \"input\"\n  })), hasError.status && React.createElement(View, {\n    style: styles.errorWrapper\n  }, React.createElement(Text, {\n    style: styles.exclamation\n  }, \"!\"))), hasError.status && React.createElement(Text, {\n    style: [styles.underneathText, props.underneathTextStyle]\n  }, props.underneathText || hasError.message));\n});\n\nvar validateEmail = function validateEmail(email) {\n  return /^\\S+@\\S+\\.\\S+$/.test(email);\n};\n\nvar validateNumber = function validateNumber(number) {\n  return /^\\d+$/.test(number);\n};\n\nvar validateDecimalNumber = function validateDecimalNumber(number) {\n  return /^\\d+.*\\d*/.test(number) && !number.endsWith('.');\n};\n\nvar validatePhoneNumber = function validatePhoneNumber(number) {\n  return /^\\+{0,1}\\d+$/.test(number.replace(/ /g, ''));\n};\n\nexport var containsError = function containsError() {\n  var keyboardType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'default';\n  var isRequired = arguments.length > 1 ? arguments[1] : undefined;\n  var value = arguments.length > 2 ? arguments[2] : undefined;\n  var extraValidation = arguments.length > 3 ? arguments[3] : undefined;\n\n  if (extraValidation && !extraValidation.status) {\n    return {\n      status: true,\n      message: extraValidation.message\n    };\n  } else if (extraValidation && extraValidation.status) {\n    return {\n      status: false,\n      message: ''\n    };\n  }\n\n  if (keyboardType == 'email-address' && !validateEmail(value)) return {\n    status: true,\n    message: 'Enter a valid email'\n  };\n  if (isRequired && !value) return {\n    status: true,\n    message: 'Cannot be empty'\n  };\n  if (keyboardType == 'number-pad' || keyboardType == 'numeric' && !validateNumber(value)) return {\n    status: true,\n    message: 'Invalid number'\n  };\n  if (keyboardType == 'phone-pad' && !validatePhoneNumber(value)) return {\n    status: true,\n    message: 'Invalid phone number'\n  };\n  if (keyboardType == 'decimal-pad' && !validateDecimalNumber(value)) return {\n    status: true,\n    message: 'Invalid number'\n  };\n  return {\n    status: false,\n    message: ''\n  };\n};\nvar styles = StyleSheet.create({\n  wrapper: {\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    borderRadius: 5,\n    paddingHorizontal: 8,\n    height: 48,\n    alignItems: 'center',\n    marginBottom: 24\n  },\n  inputText: _objectSpread(_objectSpread({\n    flex: 1,\n    paddingVertical: 8\n  }, Platform.select({\n    web: {\n      outlineWidth: 0\n    }\n  })), {}, {\n    height: '90%'\n  }),\n  underneathText: {\n    marginTop: -24,\n    marginLeft: 8,\n    marginBottom: 24,\n    color: colors.red\n  },\n  label: {\n    marginBottom: 2\n  },\n  errorWrapper: {\n    height: 30,\n    width: 30,\n    borderRadius: 15,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: colors.red\n  },\n  exclamation: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold'\n  }\n});\nexport default FormItem;","map":{"version":3,"sources":["index.tsx"],"names":["FormItem","forwardRef","props","useState","status","message","Animated","keyboardType","inputRef","useRef","useImperativeHandle","setState","validation","setHasError","containsError","focus","blur","clear","isFocused","getComponent","handleBlur","e","handleFocus","toValue","wrapperHeight","useNativeDriver","duration","setShouldAnimate","useEffect","styles","height","alignItems","borderColor","colors","borderWidth","nativeEvent","setWrapperHeight","marginLeft","bottom","animatedBottom","paddingHorizontal","backgroundColor","inputRange","outputRange","marginTop","marginBottom","flex","position","right","left","hasError","errorWrapper","exclamation","asterik","validateEmail","email","validateNumber","number","validateDecimalNumber","validatePhoneNumber","extraValidation","isRequired","wrapper","flexDirection","borderRadius","inputText","paddingVertical","web","outlineWidth","underneathText","color","red","label","width","justifyContent","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React, {\n  forwardRef,\n  useState,\n  useImperativeHandle,\n  useRef,\n  ComponentProps,\n  ReactNode,\n  useEffect,\n} from 'react';\nimport {\n  TextInput,\n  View,\n  StyleSheet,\n  Text,\n  NativeSyntheticEvent,\n  TextInputFocusEventData,\n  KeyboardTypeOptions,\n  Animated,\n  Platform,\n} from 'react-native';\n\nimport Label from '../Label';\nimport { colors } from '../../colors';\n\ntype Validation = { status: boolean; message: string };\n\ninterface Props extends ComponentProps<typeof TextInput> {\n  textInputStyle?: object | object[];\n  children?: ReactNode;\n  underneathText?: string;\n  underneathTextStyle?: object | object[];\n  label?: string;\n  labelStyle?: object | object[];\n  isRequired?: boolean;\n  value: string;\n  customValidation?: () => Validation;\n  asterik?: boolean;\n  floatingLabel?: boolean;\n  textArea?: boolean;\n}\n\nconst FormItem = forwardRef(({ children, ...props }: Props, ref: any) => {\n  const [hasError, setHasError] = useState({ status: false, message: '' });\n  const [animatedBottom] = useState(new Animated.Value(0));\n  const [shouldAnimate, setShouldAnimate] = useState(true);\n  const [wrapperHeight, setWrapperHeight] = useState(0);\n  const { isRequired, value, keyboardType } = props;\n  const inputRef: any = useRef();\n\n  useImperativeHandle(ref, () => ({\n    setState: () => {\n      let validation;\n      if (props.customValidation) validation = props.customValidation();\n      setHasError(containsError(keyboardType, isRequired!, value, validation));\n    },\n    focus: () => inputRef.current.focus(),\n    blur: () => inputRef.current.blur(),\n    clear: () => inputRef.current.clear(),\n    isFocused: () => inputRef.current.isFocused(),\n    getComponent: () => 'FormItem',\n  }));\n\n  const handleBlur = (e: NativeSyntheticEvent<TextInputFocusEventData>) => {\n    let validation;\n    if (props.customValidation) validation = props.customValidation();\n    setHasError(containsError(keyboardType, isRequired!, value, validation));\n    if (props.onBlur) props.onBlur(e);\n  };\n\n  const handleFocus = (e: NativeSyntheticEvent<TextInputFocusEventData>) => {\n    setHasError({ status: false, message: '' });\n    if (props.floatingLabel && shouldAnimate)\n      Animated.timing(animatedBottom, {\n        toValue: props.textArea ? 24 : wrapperHeight / 2,\n        useNativeDriver: false,\n        duration: 300,\n      }).start(() => setShouldAnimate(false));\n\n    if (props.onFocus) props.onFocus(e);\n  };\n\n  useEffect(() => {\n    if (props.floatingLabel && props.value)\n      Animated.timing(animatedBottom, {\n        toValue: props.textArea ? 24 : wrapperHeight / 2,\n        useNativeDriver: false,\n        duration: 300,\n      }).start(() => setShouldAnimate(false));\n  }, [shouldAnimate]);\n\n  if (props.floatingLabel) {\n    return (\n      <>\n        <View\n          style={[\n            styles.wrapper,\n            props.textArea\n              ? { height: 120, alignItems: 'flex-start' }\n              : undefined,\n            props.style,\n            hasError.status\n              ? { borderColor: colors.red, borderWidth: 1 }\n              : undefined,\n          ]}\n          onLayout={({ nativeEvent }) =>\n            setWrapperHeight(nativeEvent.layout.height)\n          }\n        >\n          {props.label && (\n            <Label\n              text={props.label}\n              textStyle={[\n                !props.asterik ? { marginLeft: 4 } : undefined,\n                props.labelStyle,\n              ]}\n              asterik={props.asterik}\n              style={[\n                props.floatingLabel ? { bottom: animatedBottom } : undefined,\n                {\n                  paddingHorizontal: 2,\n                  backgroundColor: animatedBottom.interpolate({\n                    inputRange: [0, props.textArea ? 24 : wrapperHeight / 2],\n                    outputRange: ['transparent', colors.white],\n                  }),\n                  marginTop: props.textArea ? 16 : 0,\n                },\n              ]}\n            />\n          )}\n\n          <View\n            style={[\n              styles.wrapper,\n              {\n                marginBottom: 0,\n                flex: 1,\n                paddingHorizontal: 0,\n                height: '100%',\n                position: 'absolute',\n                right: 8,\n                left: 8,\n                backgroundColor: 'transparent',\n              },\n            ]}\n          >\n            {children}\n            <TextInput\n              {...props}\n              style={[styles.inputText, props.textInputStyle]}\n              ref={inputRef}\n              onBlur={handleBlur}\n              onFocus={handleFocus}\n              value={props.value}\n              autoCapitalize={\n                props.autoCapitalize ||\n                (props.keyboardType == 'email-address' ? 'none' : undefined)\n              }\n              maxLength={props.maxLength || 150}\n              placeholder=\"\"\n              multiline={props.textArea || props.multiline}\n              textAlignVertical={props.textArea ? 'top' : 'center'}\n              testID=\"input\"\n            />\n            {hasError.status && (\n              <View style={styles.errorWrapper}>\n                <Text style={styles.exclamation}>{'\\u0021'}</Text>\n              </View>\n            )}\n          </View>\n        </View>\n\n        {hasError.status && (\n          <Text style={[styles.underneathText, props.underneathTextStyle]}>\n            {props.underneathText || hasError.message}\n          </Text>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <>\n      {props.label && (\n        <Label\n          text={props.label}\n          textStyle={[\n            styles.label,\n            !props.asterik ? { marginLeft: 4 } : undefined,\n            props.labelStyle,\n          ]}\n          asterik={props.asterik}\n        />\n      )}\n      <View\n        style={[\n          styles.wrapper,\n          props.textArea ? { height: 120 } : undefined,\n          props.style,\n          hasError.status\n            ? { borderColor: colors.red, borderWidth: 1 }\n            : undefined,\n        ]}\n      >\n        {children}\n        <TextInput\n          {...props}\n          style={[styles.inputText, props.textInputStyle]}\n          ref={inputRef}\n          onBlur={handleBlur}\n          onFocus={handleFocus}\n          value={props.value}\n          autoCapitalize={\n            props.autoCapitalize ||\n            (props.keyboardType == 'email-address' ? 'none' : undefined)\n          }\n          maxLength={props.maxLength || 150}\n          multiline={props.textArea || props.multiline}\n          textAlignVertical={props.textArea ? 'top' : 'center'}\n          testID=\"input\"\n        />\n        {hasError.status && (\n          <View style={styles.errorWrapper}>\n            <Text style={styles.exclamation}>{'\\u0021'}</Text>\n          </View>\n        )}\n      </View>\n\n      {hasError.status && (\n        <Text style={[styles.underneathText, props.underneathTextStyle]}>\n          {props.underneathText || hasError.message}\n        </Text>\n      )}\n    </>\n  );\n});\n\nconst validateEmail = (email: string) => {\n  return /^\\S+@\\S+\\.\\S+$/.test(email);\n};\n\nconst validateNumber = (number: string) => {\n  return /^\\d+$/.test(number);\n};\n\nconst validateDecimalNumber = (number: string) => {\n  return /^\\d+.*\\d*/.test(number) && !number.endsWith('.');\n};\n\nconst validatePhoneNumber = (number: string) =>\n  /^\\+{0,1}\\d+$/.test(number.replace(/ /g, ''));\n\nexport const containsError = (\n  keyboardType: KeyboardTypeOptions = 'default',\n  isRequired: boolean,\n  value: string,\n  extraValidation?: Validation\n) => {\n  if (extraValidation && !extraValidation.status) {\n    return {\n      status: true,\n      message: extraValidation.message,\n    };\n  } else if (extraValidation && extraValidation.status) {\n    return { status: false, message: '' };\n  }\n\n  if (keyboardType == 'email-address' && !validateEmail(value))\n    return { status: true, message: 'Enter a valid email' };\n  if (isRequired && !value) return { status: true, message: 'Cannot be empty' };\n  if (\n    keyboardType == 'number-pad' ||\n    (keyboardType == 'numeric' && !validateNumber(value))\n  )\n    return { status: true, message: 'Invalid number' };\n  if (keyboardType == 'phone-pad' && !validatePhoneNumber(value))\n    return { status: true, message: 'Invalid phone number' };\n  if (keyboardType == 'decimal-pad' && !validateDecimalNumber(value))\n    return { status: true, message: 'Invalid number' };\n\n  return { status: false, message: '' };\n};\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    borderRadius: 5,\n    paddingHorizontal: 8,\n    height: 48,\n    alignItems: 'center',\n    marginBottom: 24,\n  },\n  inputText: {\n    flex: 1,\n    paddingVertical: 8,\n    ...Platform.select({ web: { outlineWidth: 0 } }),\n    height: '90%',\n  },\n  underneathText: {\n    marginTop: -24,\n    marginLeft: 8,\n    marginBottom: 24,\n    color: colors.red,\n  },\n  label: {\n    marginBottom: 2,\n  },\n  errorWrapper: {\n    height: 30,\n    width: 30,\n    borderRadius: 15,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: colors.red,\n  },\n  exclamation: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n});\n\nexport default FormItem;\n"]},"metadata":{},"sourceType":"module"}