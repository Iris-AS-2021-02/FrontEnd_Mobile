{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _templateObject, _templateObject2;\n\nimport { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { gql, useMutation, useQuery } from '@apollo/client';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SignUp = function SignUp(_ref) {\n  var _users$data, _users$data$usersByNu;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password2 = _useState6[0],\n      setPassword2 = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      repeatPassword = _useState8[0],\n      setRepeatPassword = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      repeatedUser = _useState10[0],\n      setRepeatedUser = _useState10[1];\n\n  var CREATE_USER = gql(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  mutation {\\n    createUser( userAuth : {\\n      Name: \\\"\", \"\\\"\\n      Number: \\\"\", \"\\\"\\n    }) {\\n          Name\\n    }\\n  }\\n\"])), password, username);\n  var GET_USER_BY_NUMBER = gql(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  query {\\n    usersByNumber(number : \\\"\", \"\\\") {\\n      Name\\n      Number\\n    } \\n  }\\n  \"])), username);\n  var users = useQuery(GET_USER_BY_NUMBER);\n  console.log(\"usrs\", users, GET_USER_BY_NUMBER, \"\\n  query {\\n    usersByNumber(number : \\\"\" + username + \"\\\") {\\n      Name\\n      Number\\n    } \\n  }\\n  \");\n  var alreadyExist = (users == null ? void 0 : (_users$data = users.data) == null ? void 0 : (_users$data$usersByNu = _users$data.usersByNumber) == null ? void 0 : _users$data$usersByNu.Name) != undefined;\n\n  var _useMutation = useMutation(CREATE_USER),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      mutateFunction = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      data = _useMutation2$.data,\n      loading = _useMutation2$.loading,\n      error = _useMutation2$.error;\n\n  var validPassword = password === password2;\n\n  var createUser = function createUser() {\n    if (validPassword && !alreadyExist) {\n      mutateFunction();\n      navigation.navigate('Login');\n    } else {\n      setRepeatPassword(validPassword == false);\n      setRepeatedUser(alreadyExist);\n    }\n  };\n\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      marginTop: '50%'\n    },\n    children: [_jsx(Text, {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Insert username\"\n    }), _jsx(TextInput, {\n      style: styles.formTextInput,\n      placeholder: \"username\",\n      isRequired: true,\n      value: username,\n      onChangeText: function onChangeText(username) {\n        return setUsername(username);\n      }\n    }), repeatedUser && _jsx(Text, {\n      style: {\n        textAlign: 'center',\n        color: 'red'\n      },\n      children: \"The username is already in use by other user\"\n    }), _jsx(Text, {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Insert password\"\n    }), _jsx(TextInput, {\n      style: styles.formTextInput,\n      placeholder: \"password\",\n      secureTextEntry: true,\n      isRequired: true,\n      value: password,\n      onChangeText: function onChangeText(password) {\n        return setPassword(password);\n      },\n      asterik: true\n    }), _jsx(Text, {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Repeat password\"\n    }), _jsx(TextInput, {\n      style: styles.formTextInput,\n      placeholder: \"password\",\n      secureTextEntry: true,\n      isRequired: true,\n      value: password2,\n      onChangeText: function onChangeText(password2) {\n        return setPassword2(password2);\n      },\n      asterik: true\n    }), repeatPassword && _jsx(Text, {\n      style: {\n        textAlign: 'center',\n        color: 'red'\n      },\n      children: \"The passwords do not match\"\n    }), _jsx(View, {\n      style: {\n        margin: 12\n      },\n      children: _jsx(Button, {\n        style: styles.submitButton,\n        onPress: createUser,\n        title: \"Sign Up\",\n        color: 'pink'\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    backgroundColor: 'white',\n    alignItems: 'center',\n    justifyContent: 'center',\n    alignContent: 'center',\n    flex: 1,\n    marginTop: 50\n  },\n  formTextInput: {\n    height: 40,\n    margin: 12,\n    borderWidth: 3,\n    padding: 10\n  },\n  submitButton: {\n    height: 10,\n    width: 10,\n    borderWidth: 1,\n    padding: 10,\n    backgroundColor: '#FFFFFF',\n    color: '#FFFFFF',\n    marginTop: 40\n  }\n});\nexport default SignUp;","map":{"version":3,"sources":["/Users/ssramirez/iris/components/SignUp.js"],"names":["useState","React","NavigationContainer","createNativeStackNavigator","gql","useMutation","useQuery","SignUp","navigation","username","setUsername","password","setPassword","password2","setPassword2","repeatPassword","setRepeatPassword","repeatedUser","setRepeatedUser","CREATE_USER","GET_USER_BY_NUMBER","users","console","log","alreadyExist","data","usersByNumber","Name","undefined","mutateFunction","loading","error","validPassword","createUser","navigate","flex","marginTop","textAlign","styles","formTextInput","color","margin","submitButton","StyleSheet","create","container","position","backgroundColor","alignItems","justifyContent","alignContent","height","borderWidth","padding","width"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { StyleSheet, View, TextInput, Button, Text } from 'react-native';\nimport React from 'react';\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { gql, useMutation, useQuery } from '@apollo/client';\n\nconst SignUp = ({ navigation }) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [password2, setPassword2] = useState(\"\");\n  const [repeatPassword, setRepeatPassword] = useState(false);\n  const [repeatedUser, setRepeatedUser] = useState(false);\n\n  const CREATE_USER = gql`\n  mutation {\n    createUser( userAuth : {\n      Name: \"${password}\"\n      Number: \"${username}\"\n    }) {\n          Name\n    }\n  }\n`;\n\n  const GET_USER_BY_NUMBER = gql`\n  query {\n    usersByNumber(number : \"${username}\") {\n      Name\n      Number\n    } \n  }\n  `;\n  const users = useQuery(GET_USER_BY_NUMBER);\n  console.log(\"usrs\",users, GET_USER_BY_NUMBER,`\n  query {\n    usersByNumber(number : \"${username}\") {\n      Name\n      Number\n    } \n  }\n  `);\n  const alreadyExist =users?.data?.usersByNumber?.Name != undefined;\n  const [mutateFunction, { data, loading, error }] = useMutation(CREATE_USER);\n\n  const validPassword = password === password2;\n  const createUser = () => {\n    if (validPassword && !alreadyExist) {\n      mutateFunction();\n      navigation.navigate('Login');\n    } else {\n      setRepeatPassword(validPassword == false);\n      setRepeatedUser(alreadyExist);\n    }\n  }\n  return (\n    <View style={{ flex: 1, marginTop: '50%' }}>\n      <Text style={{ textAlign: 'center' }}>\n        Insert username\n      </Text>\n      <TextInput style={styles.formTextInput}\n        placeholder=\"username\"\n        isRequired\n        value={username}\n        onChangeText={(username) => setUsername(username)}\n      />\n      {(repeatedUser && <Text style={{ textAlign: 'center', color: 'red' }}>\n        The username is already in use by other user\n      </Text>)}\n      <Text style={{ textAlign: 'center' }}>\n        Insert password\n      </Text>\n      <TextInput style={styles.formTextInput}\n        placeholder=\"password\"\n        secureTextEntry={true}\n        isRequired={true}\n        value={password}\n        onChangeText={(password) => setPassword(password)}\n        asterik />\n      <Text style={{ textAlign: 'center' }}>\n        Repeat password\n      </Text>\n      <TextInput style={styles.formTextInput}\n        placeholder=\"password\"\n        secureTextEntry={true}\n        isRequired={true}\n        value={password2}\n        onChangeText={(password2) => setPassword2(password2)}\n        asterik />\n      {(repeatPassword && <Text style={{ textAlign: 'center', color: 'red'  }}>\n        The passwords do not match\n      </Text>)}\n      <View style={{ margin: 12 }}>\n\n        <Button\n          style={styles.submitButton}\n          onPress={createUser}\n          title=\"Sign Up\"\n          color={'pink'}\n        />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    backgroundColor: 'white',\n    alignItems: 'center',\n    justifyContent: 'center',\n    alignContent: 'center',\n    flex: 1,\n    marginTop: 50\n  },\n  formTextInput: {\n    height: 40,\n    margin: 12,\n    borderWidth: 3,\n    padding: 10,\n\n  },\n  submitButton: {\n    height: 10,\n    width: 10,\n    borderWidth: 1,\n    padding: 10,\n    backgroundColor: '#FFFFFF',\n    color: '#FFFFFF',\n    marginTop: 40,\n  }\n});\n\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}